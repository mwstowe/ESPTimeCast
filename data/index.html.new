// Modify the onload function to remove references to netatmoUsername and netatmoPassword
window.onload = function () {
  fetch('/config.json')
    .then(response => response.json())
    .then(data => {
      isAPMode = (data.mode === "ap");
      if (isAPMode) {
        document.querySelector('.footer').style.display = 'none';
      }

      document.getElementById('ssid').value = data.ssid || '';
      document.getElementById('password').value = data.password || '';
      document.getElementById('netatmoClientId').value = data.netatmoClientId || '';
      document.getElementById('netatmoClientSecret').value = data.netatmoClientSecret || '';
      // Remove these lines:
      // document.getElementById('netatmoUsername').value = data.netatmoUsername || '';
      // document.getElementById('netatmoPassword').value = data.netatmoPassword || '';
      document.getElementById('netatmoAccessToken').value = data.netatmoAccessToken || '';
      document.getElementById('netatmoRefreshToken').value = data.netatmoRefreshToken || '';
      document.getElementById('netatmoDeviceId').value = data.netatmoDeviceId || '';
      document.getElementById('netatmoModuleId').value = data.netatmoModuleId || '';
      document.getElementById('netatmoIndoorModuleId').value = data.netatmoIndoorModuleId || '';
      
      // Set the toggle values instead of tempSource dropdown
      document.getElementById('useNetatmoOutdoor').checked = !!data.useNetatmoOutdoor;
      document.getElementById('prioritizeNetatmoIndoor').checked = !!data.prioritizeNetatmoIndoor;
      
      document.getElementById('mdnsHostname').value = data.mdnsHostname || 'esptime';
      document.getElementById('weatherUnits').value = data.weatherUnits || 'metric';
      document.getElementById('clockDuration').value = (data.clockDuration || 10000) / 1000;
      document.getElementById('weatherDuration').value = (data.weatherDuration || 5000) / 1000;
      // Advanced:
      document.getElementById('brightnessSlider').value = typeof data.brightness !== "undefined" ? data.brightness : 10;
      document.getElementById('brightnessValue').textContent = document.getElementById('brightnessSlider').value;
      document.getElementById('tempAdjustSlider').value = typeof data.tempAdjust !== "undefined" ? data.tempAdjust : 0;
      document.getElementById('tempAdjustValue').textContent = document.getElementById('tempAdjustSlider').value;
      document.getElementById('flipDisplay').checked = !!data.flipDisplay;
      document.getElementById('ntpServer1').value = data.ntpServer1 || "";
      document.getElementById('ntpServer2').value = data.ntpServer2 || "";
      document.getElementById('twelveHourToggle').checked = !!data.twelveHourToggle;
      document.getElementById('showDayOfWeek').checked = !!data.showDayOfWeek;
      document.getElementById('showIndoorTemp').checked = typeof data.showIndoorTemp !== "undefined" ? !!data.showIndoorTemp : true;
      document.getElementById('showOutdoorTemp').checked = typeof data.showOutdoorTemp !== "undefined" ? !!data.showOutdoorTemp : true;
      // Auto-detect browser's timezone if not set in config
      if (!data.timeZone) {
        try {
          const tz = Intl.DateTimeFormat().resolvedOptions().timeZone;
          if (
            tz &&
            document.getElementById('timeZone').querySelector(`[value="${tz}"]`)
          ) {
            document.getElementById('timeZone').value = tz;
          }
        } catch (e) {
          console.error("Could not auto-detect timezone:", e);
        }
      } else {
        document.getElementById('timeZone').value = data.timeZone;
      }
      
      // Populate device and module fields
      if (data.netatmoDeviceId) {
        document.getElementById('netatmoDeviceIdManual').value = data.netatmoDeviceId;
      }
      if (data.netatmoModuleId) {
        document.getElementById('netatmoModuleIdManual').value = data.netatmoModuleId;
      }
      if (data.netatmoIndoorModuleId) {
        document.getElementById('netatmoIndoorModuleIdManual').value = data.netatmoIndoorModuleId;
      }
      
      // Trigger device fetch if we have credentials
      if (data.netatmoClientId && data.netatmoClientSecret) {
        // Trigger the fetchNetatmoDevices function
        const event = new Event('change');
        document.getElementById('netatmoClientId').dispatchEvent(event);
      }
      
      document.body.classList.add('loaded');
    })
    .catch(error => {
      console.error('Error loading config:', error);
      document.body.classList.add('loaded');
      alert('Error loading configuration. Please check the console for details.');
    });
};
